{
 "name": "decorate-files-and-folders",
 "displayName": "Decorate Files",
 "description": "Decorate Files and Folders with colors and badges",
 "version": "0.1.5",
 "preview": true,
 "publisher": "ArturoDent",
 "license": "MIT",
 "repository": {
  "type": "git",
  "url": "https://github.com/ArturoDent/decorate-files"
 },
 "funding": {
  "url": "https://www.buymeacoffee.com/ArturoDent"
 },
 "engines": {
  "vscode": "^1.46.0"
 },
 "categories": [
  "Other"
 ],
 "keywords": [
  "decorate",
  "decoration",
  "badge",
  "read-only",
  "readonly",
  "multiroot"
 ],
 "activationEvents": [
  "onStartupFinished"
 ],
 "main": "./out/extension.js",
 "browser": "./out/extension.js",
 "contributes": {
  "commands": [
   {
    "command": "decorateFiles.clearColors",
    "title": "Delete user-defined colors in all settings",
    "category": "Decorate Files"
   }
  ],
  "configuration": [
   {
    "title": "Decorate Files and Folders",
    "id": "decorateFiles",
    "order": 0,
    "properties": {
     "decorateFiles.decorations.apply": {
      "markdownDescription": "Apply color and badge decorations. These decorations will be applied top-down in the order listed below, with earlier decorations having priority.  Badges are independent of the other apply settings. For the read-only option, enable this setting: `#files.readonlyFromPermissions#`.",
      "title": "Decorate Files: Decorations",
      "order": 0,
      "type": "object",
      "scope": "resource",
      "properties": {
       "enableReadonly": {
        "type": "boolean",
        "description": "Decorate read-only files."
       },
       "enableNonWorkspaceFiles": {
        "type": "boolean",
        "description": "Decorate non-workspace files."
       },
       "enableFilePaths": {
        "type": "boolean",
        "description": "Decorate folders and fileNames containing some string."
       },
       "enableMultirootWorkspaces": {
        "type": "boolean",
        "description": "Decorate each folder of a multiroot workspace."
       },
       "enableFolders": {
        "type": "boolean",
        "description": "Decorate each folder."
       },
       "enableBadges": {
        "type": "boolean",
        "description": "Apply badges."
       }
      },
      "additionalProperties": false,
      "default": {
       "enableReadonly": false,
       "enableNonWorkspaceFiles": false,
       "enableFilePaths": false,
       "enableMultirootWorkspaces": false,
       "enableFolders": false,
       "enableBadges": false
      }
     },
     "decorateFiles.filePaths": {
      "type": "object",
      "order": 1,
      "additionalProperties": {
       "type": "string"
      },
      "uniqueItems": true,
      "default": {},
      "markdownDescription": "Enter a portion of a path and a color value as a hex string like `#ab6009`. Example: `.js: #f00` to make all files ending with `.js` red.  `someFolder/: #f00` to make the folder name red. `someFolder/**: #f00` to make the folder name and its descendants red."
     },
     "decorateFiles.badges": {
      "type": "object",
      "maxLength": 2,
      "scope": "resource",
      "order": 3,
      "properties": {
       "non-workspace files": {
        "type": "string",
        "description": "Add a badge to non-Workspace files"
       }
      },
      "additionalProperties": false,
      "default": {
       "non-workspace files": "⏹⏹"
      },
      "markdownDescription": "Can be 1-2 characters, including unicode characters (but not unicode, don't use `\\u23F9` for example, paste its character ⏹ instead). Leave the value empty for no badge.  The setting `#explorer.decorations.badges#` must be set to `true` for this setting to take effect."
     }
    }
   }
  ],
  "colors": [
   {
    "id": "decorateFiles.folderColors",
    "description": "Color for folder names in the Explorer.",
    "defaults": {
     "dark": "#00b7ff",
     "light": "#00b7ff",
     "highContrast": "#00b7ff",
     "highContrastLight": "#00b7ff"
    }
   },
   {
    "id": "decorateFiles.nonWorkspaceFiles",
    "description": "Color for a non-workspace editor label.",
    "defaults": {
     "dark": "#ff00ee",
     "light": "#ff00ee",
     "highContrast": "#ff00ee",
     "highContrastLight": "#ff00ee"
    }
   },
   {
    "id": "decorateFiles.readOnlyFiles",
    "description": "Color for a read-only editor label and Explorer fileName.",
    "defaults": {
     "dark": "#c99703",
     "light": "#c99703",
     "highContrast": "#c99703",
     "highContrastLight": "#c99703"
    }
   },
   {
    "id": "decorateFiles.workspaceFolder.1",
    "description": "Color for the 1st root folder.",
    "defaults": {
     "dark": "#f00",
     "light": "#f00",
     "highContrast": "#f00",
     "highContrastLight": "#f00"
    }
   },
   {
    "id": "decorateFiles.workspaceFolder.2",
    "description": "Color for the 2nd root folder.",
    "defaults": {
     "dark": "#00f",
     "light": "#00f",
     "highContrast": "#00f",
     "highContrastLight": "#00f"
    }
   },
   {
    "id": "decorateFiles.workspaceFolder.3",
    "description": "Color for the 3rd root folder.",
    "defaults": {
     "dark": "#00ff37",
     "light": "#00ff37",
     "highContrast": "#00ff37",
     "highContrastLight": "#00ff37"
    }
   }
  ]
 },
 "extensionKind": [
  "ui",
  "workspace"
 ],
 "scripts": {
  "vscode:prepublish": "npm run compile",
  "compile": "tsc -p ./",
  "lint": "eslint src --ext ts",
  "watch": "tsc -watch -p ./",
  "pretest": "npm run compile && npm run lint",
  "test": "node ./out/test/runTest.js"
 },
 "devDependencies": {
  "@types/glob": "^7.1.1",
  "@types/mocha": "^7.0.2",
  "@types/node": "^13.11.0",
  "@types/vscode": "^1.46.0",
  "@typescript-eslint/eslint-plugin": "^2.30.0",
  "@typescript-eslint/parser": "^2.30.0",
  "eslint": "^6.8.0",
  "glob": "^7.1.6",
  "mocha": "^7.1.2",
  "typescript": "^5.1.6",
  "vscode-test": "^1.3.0"
 }
}